QUERIES

1) Select *
From SN7577;

2)Select web1, web2, web3, web4
From SN7577;

3)Select w*
From SN7577;

4)Select *
From SN7577
Limit 10;


5)Select *
From SN7577
Limit 10;

6) ESERCIZIO 1
SELECT Q1,Q2,Q3,Q4, numage 
FROM SN7577
LIMIT 5;

7) WHERE
Select  Q1,  Q3, Q4
From SN7577
Where Q1 = 2;

8) Select  Q1,  Q3, Q4
From SN7577
Where Q1 > 5;

9)Select  Q1,  Q3, Q4
From SN7577
Where Q1 > 5 and Q3 <> 2;

10) using precedence with brakets
Select  Q1,  Q3, Q4
From SN7577
Where Q1 = 5 or (Q3 <> 2 and Q4 > 8);

11)Select  Q1,  Q3, Q4
From SN7577
Where Q1 > 5 and Q1 < 8;

12)Select  Q1,  Q3, Q4
From SN7577
Where Q1 Between 5 and 8;

13) Select  Q1,  Q3, Q4
From SN7577
Where Q1 In (5, 6, 7, 8);

14) challenge 2
select web1, web2, web3 ,  numage
from sn7577
where web1 >= 0 and web2 in (0, 1) and web3 <> -1 and numage between 30 and 40;

15) sorting
Select  Q1,  Q3, Q4
From SN7577
Where Q1 In (5, 6, 7, 8)
Order By Q1;

16) desc
Select  Q1,  Q3, Q4
From SN7577
Where Q1 In (5, 6, 7, 8)
Order By Q1 Desc;

17) multiple
Select  Q1,  Q3, Q4
From SN7577
Where Q1 In (5, 6, 7, 8)
Order By Q1 Desc, Q3 Asc;

18) Null values return 39
SELECT * 
FROM SN7577_nulls 
WHERE Q2 = 11; 

19) SELECT *
FROM SN7577_nulls
WHERE Q2 = -1;

20) SELECT * 
FROM SN7577_nulls WHERE numage IS NULL; 

21) SELECT * 
FROM SN7577_nulls WHERE numage IS NOT NULL; 

22) Creating column 
SELECT daily1, daily2, daily3, daily4, daily5, daily6, daily7, daily8,
       daily9, daily10, daily11, daily12, daily13, daily14, daily15,
       daily16, daily17, daily18, daily19, daily20, daily21, daily22,
       daily23, daily24, daily25
FROM SN7577;

23) doing the sum
SELECT (daily1 + daily2 + daily3 + daily4 + daily5 + daily6 + daily7 + daily8 +
        daily9 + daily10 + daily11 + daily12 + daily13 + daily14 + daily15 +
        daily16 + daily17 + daily18 + daily19 + daily20 + daily21 + daily22 +
        daily23 + daily24 + daily25)
FROM SN7577;


24) using Alias
SELECT (daily1 + daily2 + daily3 + daily4 + daily5 + daily6 + daily7 + daily8 +
        daily9 + daily10 + daily11 + daily12 + daily13 + daily14 + daily15 +
        daily16 + daily17 + daily18 + daily19 + daily20 + daily21 + daily22 +
        daily23 + daily24 + daily25) AS Total_dailies
FROM SN7577;


25) using cast
SELECT numage,
       cast(numage as Integer) int_numage
FROM SN7577_Text;


26a) Using substring
SELECT Q5axv,
   NOT (substr(Q5axv, 1,2) = "no" ) as Q5axv_value
FROM SN7577_Text;



26b) using instring Challenge
SELECT Q5axv,
   NOT (instr(Q5axv, "no")) as Q5axv_value
FROM SN7577_Text;


27)SELECT Q5axv ,
       case Q5axv
            when "no null" then 0
            when "null" then 1
       end as Q5axv_bool 
FROM SN7577_Text;

28)Binned
SELECT numage ,
               case 
                   when numage between 18 and 24 then "18 - 24"
                   when numage between 25 and 34 then "25 - 34"
                   when numage between 35 and 44 then "35 - 44"
                   when numage between 45 and 54 then "45 - 54"
                   when numage between 55 and 59 then "55 - 59"
                   when numage between 60 and 64 then "60 - 64"
                   when numage          >= 65              then "65+"
                else
                    "Under age"
               end as numage_range
FROM SN7577;

29) add order by
SELECT numage ,
               case 
                   when numage between 18 and 24 then "18 - 24"
                   when numage between 25 and 34 then "25 - 34"
                   when numage between 35 and 44 then "35 - 44"
                   when numage between 45 and 54 then "45 - 54"
                   when numage between 55 and 59 then "55 - 59"
                   when numage between 60 and 64 then "60 - 64"
                   when numage          >= 65              then "65+"
                else
                    "Under age"
               end as numage_range
FROM SN7577

30) use math
SELECT 
    min(numage),
    avg(numage),
    max(numage)
FROM SN7577;


31)SELECT DISTINCT Q1
FROM SN7577_Text;

32) Challenge
SELECT DISTINCT Q1, Q3
FROM SN7577_Text
ORDER BY Q1, Q3;

33) Group by
SELECT Q1,
       count(*) as Num_potential_voters
FROM SN7577_Text
GROUP BY Q1
ORDER BY Q1;

34)Group by
SELECT Q1, 
       Q3,
       count(*) as Num_potential_voters
FROM SN7577_Text
GROUP BY Q1, Q3
ORDER BY Q1;

35) Having
SELECT Q1 ,
       sum(daily3) as Telegraph_reader
FROM SN7577 
GROUP BY Q1
HAVING Telegraph_reader > 5;

36)challenge
SELECT Q1 ,
       sum(daily12) as Mirror_reader
FROM SN7577 
GROUP BY Q1
HAVING Mirror_reader > 5;

37) create table
CREATE TABLE Animal
(     Id_A Integer,
      Name Text
);

38) challenge
CREATE TABLE Animals_Eat
(   Id_E Integer,
    Eats
);


39) insert into
INSERT INTO Animals (Id_A, Name)
 VALUES   (1, "Elephant"),
          (2, "Monkey"),
          (3, "Cat"),
          (4, "Dog"),
          (8, "Goat"),
          (10, "Pig"),
          (11, "Mouse")

40) challenge
INSERT INTO Animals_Eat 
 VALUES   (1, "Hay"),
          (3, "Fish"),
          (4, "Meat"),
          (6, "Goldfish Food"),
          (7, "Lettuse"),
          (8, "Flowers"),
          (10, "Anything")

41) Create a new table
CREATE Table SN7577_reduced AS
SELECT Q1,
       Q2,
       Q3,
       Sex,
       Age,
       Class
FROM SN7577;

42)create wiew
CREATE view SN7577_reduced AS
SELECT Q1,
       Q2,
       Q3,
       Sex,
       Age,
       Class
FROM SN7577;

43) Inizio Joins
SELECT Q1,      
 count(*) as how_many 
 FROM SN7577 
 GROUP BY Q1;

44)Join
SELECT q.value,    
count(*) AS how_many 
FROM SN7577 AS s 
JOIN Question1 AS q 
ON q.key = s.Q1 
GROUP BY  s.Q1

45)Challenge 
SELECT Question1.value,    
count(*) 
FROM SN7577 
JOIN Question1 
ON Question1.key = SN7577.Q1 
GROUP BY  Question1.value;


46) Test different queries =inner query
SELECT Animals.*, Animals_Eat.*
FROM Animals
JOIN Animals_Eat

47) Left outer Join
SELECT Animals.*, Animals_Eat.*
FROM Animals
LEFT OUTER JOIN Animals_Eat
ON Animals.Id_A = Animals_Eat.Id_E;

48) Revers Left outer join
SELECT Animals.*, Animals_Eat.*
FROM Animals_Eat
LEFT OUTER JOIN Animals
ON Animals.Id_A = Animals_Eat.Id_E;

49) CHallenge1
SELECT Animals.*, Animals_Eat.*
FROM Animals
LEFT OUTER JOIN Animals_Eat
ON Animals.Id_A = Animals_Eat.Id_E
WHERE Animals_Eat.Eats is null;

50) CHallenge 2
SELECT Animals.*, Animals_Eat.*
FROM Animals_Eat
LEFT OUTER JOIN Animals
ON Animals.Id_A = Animals_Eat.Id_E
WHERE Animals.Name is null;